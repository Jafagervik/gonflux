import @std
import @concurrency
import @threads

/*

This 
is
a 
multiline 
comment
in
GonFLUX

*/


fun do_op() : str -> 
    x = "Hello"

    // String concatination
    return x ++ " World\n" 
end


proc main() -> 
    a = spawn(do_op)
    b = spawn(do_op)
    c = spawn(do_op)

    d = spawn(\x y -> x + y)

    // Potentially add a waitforall 
    waitfor(a, b, c, d)

    print(a)
    print(b)
    print(c)
    print(d)
end


main()
